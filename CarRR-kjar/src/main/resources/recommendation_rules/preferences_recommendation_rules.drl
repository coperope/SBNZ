//created on: May 17, 2020
package recommendation_rules

//list any import classes here.
import main.facts.Customer;
import main.facts.PreferencesRecommendations;
import main.facts.Category;
import main.facts.Tag;
import main.facts.Brand;
import main.facts.Fuel;
import main.facts.Transmission;
import main.facts.CustomerPreferences;
import main.facts.Vehicle;
import main.facts.Bundle;
import main.facts.Recommendations;



rule "Category preference rule"
agenda-group "preferences"
salience 10
no-loop true
lock-on-active true
    when
        Customer($preferences: preferences, $recommendations: recommendations)
        CustomerPreferences($preferedCategories: categoryList) from $preferences
        
        $vehicle: Vehicle($categories: categories)
        
        Number($preferencesHit : intValue) from accumulate(
                    $c: Category($id: id) from $categories
					and
					Category($c.name == name) from $preferedCategories
                    ,
                    count($id)
                )
    then
    	modify ($recommendations) {addPreferencesHits($vehicle, $preferencesHit)}

end

rule "Mileage limit preference rule"
agenda-group "preferences"
salience 10
no-loop true
lock-on-active true
    when
        Customer($preferences: preferences, $recommendations: recommendations)
        CustomerPreferences($preferedMileageLimit: mileageLimit) from $preferences
        $vehicle: Vehicle()

        Vehicle(mileageLimit == -1, $preferedMileageLimit == -1 ) from $vehicle
        or
        Vehicle(mileageLimit != -1, $preferedMileageLimit != -1, mileageLimit >= $preferedMileageLimit) from $vehicle
    then
    	modify ($recommendations) {addPreferencesHits($vehicle, 1)}
end


rule "Tag preference rule"
agenda-group "preferences"
salience 10
no-loop
lock-on-active true
    when
        Customer($preferences: preferences, $recommendations: recommendations)
        CustomerPreferences($preferedTags: tagList) from $preferences

        $vehicle: Vehicle($tags: tags)

        Number($preferencesHit : intValue) from accumulate(
                    $c: Tag($id: id) from $tags
					and
					Tag($c.name == name) from $preferedTags
                    ,
                    count($id)
                )
    then
    	modify ($recommendations) {addPreferencesHits($vehicle, $preferencesHit)}
end

rule "Brand preference rule"
agenda-group "preferences"
salience 10
no-loop
lock-on-active true
    when
        Customer($preferences: preferences, $recommendations: recommendations)
        CustomerPreferences($preferedBrands: brandList) from $preferences

        $vehicle: Vehicle($brand: brand)
        Brand(name == $brand.name) from $preferedBrands
    then
    	modify ($recommendations) {addPreferencesHits($vehicle, 1)}
end

rule "Fuel preference rule"
agenda-group "preferences"
salience 10
no-loop
lock-on-active true
    when
        Customer($preferences: preferences, $recommendations: recommendations)
        CustomerPreferences($preferedFuels: fuelList) from $preferences

        $vehicle: Vehicle($fuel: fuel)
        Fuel(name == $fuel.name) from $preferedFuels
    then
    	modify ($recommendations) {addPreferencesHits($vehicle, 1)}
end


rule "Transmission preference rule"
agenda-group "preferences"
salience 10
no-loop
lock-on-active true
    when
        Customer($preferences: preferences, $recommendations: recommendations)
        CustomerPreferences($preferedTransmissions: transmissionList) from $preferences

        $vehicle: Vehicle($transmission: transmission)
        Transmission(name == $transmission.name) from $preferedTransmissions
    then
    	modify ($recommendations) {addPreferencesHits($vehicle, 1)}
end

rule "Seats number preference rule"
agenda-group "preferences"
salience 10
no-loop
lock-on-active true
    when
        Customer($preferences: preferences, $recommendations: recommendations)
        CustomerPreferences($preferedSeatsNo: seatsNo) from $preferences

        $vehicle: Vehicle($preferedSeatsNo == seatsNo)
    then
    	modify ($recommendations) {addPreferencesHits($vehicle, 1)}
end

rule "Door number preference rule"
agenda-group "preferences"
salience 10
no-loop
lock-on-active true
    when
        Customer($preferences: preferences, $recommendations: recommendations)
        CustomerPreferences($preferedDoorNo: doorNo) from $preferences

        $vehicle: Vehicle($preferedDoorNo == doorNo)
    then
    	modify ($recommendations) {addPreferencesHits($vehicle, 1)}
end

rule "Fuel consumption preference rule"
agenda-group "preferences"
salience 10
no-loop
lock-on-active true
    when
        Customer($preferences: preferences, $recommendations: recommendations)
        CustomerPreferences($preferedFuelConsumption: fuelConsumption) from $preferences

        $vehicle: Vehicle($preferedFuelConsumption >= fuelConsumption)
    then
    	modify ($recommendations) {addPreferencesHits($vehicle, 1)}
end


rule "Preferences - Save recommendations and remove facts from session"
agenda-group "preferences"
salience 3
    when
        not Bundle()
    	$c: Customer($recommendations: recommendations)
        $r: Recommendations() from $recommendations
    then
        System.out.println("------------- PREFERENCES RULES: Removing customer and recommendations -------------");
    	recommendationsRepo.save($r);
    	customerRepository.save($c);
    	delete($c);
    	delete($r);
end

rule "Preferences - Remove vehicle from session"
agenda-group "preferences"
salience 2
    when
        not Bundle()
    	$v: Vehicle()
    then
        System.out.println("------------- PREFERENCES RULES: Removing vehicle -------------");
    	delete($v);
end

rule "Preferences - increase number of finished recommendation rules"
agenda-group "preferences"
no-loop true
salience 2
    when
        $b: Bundle($vehicleID: vehicleID)
        $v: Vehicle(id == $vehicleID)
    then
        System.out.println("------------- PREFERENCES RULES: Preferences recommendation rules done - increase count -------------");
        modify ($b) {increaseFinishedRules()};
end

rule "Preferences - save recommendations and remove facts from session if all done"
agenda-group "preferences"
salience 1
    when
        $b: Bundle(finishedRules >= 3, $vehicleID: vehicleID)
        $v: Vehicle(id == $vehicleID)
    	$c: Customer($recommendations: recommendations)
        $r: Recommendations() from $recommendations
    then
        System.out.println("------------- PREFERENCES RULES: Removing customer and recommendations if all recommendation rules are done-------------");
        recommendationsRepo.save($r);
        customerRepository.save($c);
        delete($c);
        delete($r);
end

rule "Preferences - remove vehicle from session if all done"
agenda-group "preferences"
salience 0
    when
        $b: Bundle(finishedRules >= 3, $vehicleID: vehicleID)
        $v: Vehicle(id == $vehicleID)
    then
		System.out.println("------------- PREFERENCES RULES: Removing vehicles if all recommendation rules are done-------------");
		delete($v);
		delete($b);
end
